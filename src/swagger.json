{
    "openapi": "3.0.0",
    "info": {
        "title": "HATie Documentation",
        "description": "This is API provides a way for healthcare professionals to register findings via voice input.",
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://localhost:4000",
            "description": "Test API"
        },
        {
            "url": "http://herokuapp.com/",
            "description": "Heroku App - Not deployed yet"
        }
    ],
    "components": {
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "scheme": "bearer",
                "bearerFormat": "JWT"
            }
        },
        "schemas": {
            "user": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "fullname": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string",
                        "format": "email"
                    },
                    "isAdmin": {
                        "type": "boolean"
                    },
                    "preferences": {
                        "type": "object"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "userExpanded": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "fullname": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string",
                        "format": "email"
                    },
                    "isAdmin": {
                        "type": "boolean"
                    },
                    "preferences": {
                        "type": "object"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "Institution": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/institutionExpanded"
                        }
                    },
                    "Member": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/member"
                        }
                    }
                }
            },
            "invitationStatus": {
                "type": "string",
                "enum": [
                    "ACCEPTED",
                    "REJECTED",
                    "PENDING"
                ]
            },
            "member": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "userId": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "institutionId": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "authorizations": {
                        "type": "number"
                    },
                    "invitation": {
                        "$ref": "#/components/schemas/invitationStatus"
                    },
                    "acceptedAt": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "institution": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "ownerId": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "name": {
                        "type": "string"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "institutionExpanded": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "ownerId": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "name": {
                        "type": "string"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "Group": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/group"
                        }
                    },
                    "User": {
                        "$ref": "#/components/schemas/user"
                    },
                    "_count": {
                        "type": "object",
                        "properties": {
                            "Patient": {
                                "type": "number"
                            },
                            "Member": {
                                "type": "number"
                            }
                        }
                    }
                }
            },
            "group": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "name": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "institutionId": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "groupExpanded": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "name": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "institutionId": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "Patient": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/patient"
                        }
                    },
                    "_count": {
                        "type": "object",
                        "properties": {
                            "GroupMember": {
                                "type": "number"
                            }
                        }
                    }
                }
            },
            "groupMember": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "memberId": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "groupId": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "authorizations": {
                        "type": "number"
                    }
                }
            },
            "patient": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "fullname": {
                        "type": "string"
                    },
                    "birthdate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "height": {
                        "type": "number"
                    },
                    "weight": {
                        "type": "number"
                    },
                    "groupId": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true
                    },
                    "institutionId": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "patientExpanded": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "fullname": {
                        "type": "string"
                    },
                    "birthdate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "height": {
                        "type": "number"
                    },
                    "weight": {
                        "type": "number"
                    },
                    "groupId": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true
                    },
                    "institutionId": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "Summarization": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/summary"
                        }
                    }
                }
            },
            "summaryStatus": {
                "type": "string",
                "enum": [
                    "PROCESSING",
                    "COMPLETED",
                    "FAILED"
                ]
            },
            "summary": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "patientId": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "title": {
                        "type": "string"
                    },
                    "transcription": {
                        "type": "string"
                    },
                    "audioPath": {
                        "type": "string"
                    },
                    "insights": {
                        "$ref": "#/components/schemas/summaryInsights"
                    },
                    "status": {
                        "$ref": "#/components/schemas/summaryStatus"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "summaryInsights": {
                "properties": {
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string"
                                },
                                "type": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "structuredData": {
                        "type": "object",
                        "properties": {
                            "conditions": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            },
                            "procedures": {
                                "type": "object",
                                "properties": {
                                    "imagingExams": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "laboratoryTests": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                }
                            },
                            "substances": {
                                "type": "object",
                                "properties": {
                                    "medicines": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "other": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "highlightedTranscription": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "words": {
                                    "type": "string"
                                },
                                "type": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "paths": {
        "/auth": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Authenticate user",
                "description": "Allows a user access to the application by verifying email and password args.",
                "security": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email"
                                    },
                                    "password": {
                                        "type": "string"
                                    }
                                },
                                "example": {
                                    "email": "email@email.com",
                                    "password": "password123"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "token": {
                                            "type": "string"
                                        },
                                        "user": {
                                            "$ref": "#/components/schemas/user"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Bad Request",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "string",
                                    "example": "Email/Password Incorrect"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/users": {
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Create user",
                "description": "Meant for registration purposes",
                "security": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "fullname": {
                                        "type": "string"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email"
                                    },
                                    "password": {
                                        "type": "string"
                                    },
                                    "isAdmin": {
                                        "type": "boolean"
                                    },
                                    "preferences": {
                                        "type": "object"
                                    }
                                },
                                "example": {
                                    "fullname": "Name Surname",
                                    "email": "email@hotmail.com",
                                    "password": "Pass123*",
                                    "isAdmin": true,
                                    "preferences": {
                                        "darkmode": true
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/user"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "string",
                                    "example": "Email, password and name are required\nUser already exists\nPassword must contain at least one upper case character\nPassword must contain at least one lower case character\nPassword must contain at least one special character\nPassword must contain at least one number"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/users/{id}": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get User",
                "description": "Get user info",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string",
                        "description": "User id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/userExpanded"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "400": {
                        "description": "User ID is required"
                    },
                    "404": {
                        "description": "User not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "patch": {
                "tags": [
                    "Users"
                ],
                "summary": "Update User",
                "description": "Update user info",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string",
                        "description": "User id"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "fullname": {
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "nullable": true
                                    },
                                    "password": {
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "preferences": {
                                        "type": "object",
                                        "nullable": true
                                    }
                                },
                                "example": {
                                    "fullname": "Name Surname",
                                    "email": "email@hotmail.com",
                                    "password": "Pass123*",
                                    "preferences": {
                                        "darkmode": true
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/user"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "400": {
                        "description": "User ID is required"
                    },
                    "404": {
                        "description": "User not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Users"
                ],
                "summary": "Delete User",
                "description": "Remove user from system",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string",
                        "description": "User id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/user"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "400": {
                        "description": "User ID is required"
                    },
                    "404": {
                        "description": "User not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/institutions/{id}/members": {
            "post": {
                "tags": [
                    "Members"
                ],
                "summary": "Create member",
                "description": "Connects a user to an institution",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string",
                        "description": "Institution id"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "userId": {
                                        "type": "string",
                                        "format": "uuid"
                                    }
                                },
                                "example": {
                                    "userId": "aceae7ca-6fa6-47df-b6ca-8583342e08d7"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/member"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "400": {
                        "description": "Member already exists"
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "string",
                                    "example": "User does not exists\nInstitution does not exist"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "get": {
                "tags": [
                    "Members"
                ],
                "summary": "Get Members",
                "description": "Get all members from an institution",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string",
                        "description": "Institution id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/member"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "400": {
                        "description": "Institution ID is required"
                    },
                    "404": {
                        "description": "Institution does not exists"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/members/{id}": {
            "get": {
                "tags": [
                    "Members"
                ],
                "summary": "Get Member",
                "description": "Get member info",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string",
                        "description": "Member id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/member"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "400": {
                        "description": "Member ID is required"
                    },
                    "404": {
                        "description": "Member not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "patch": {
                "tags": [
                    "Members"
                ],
                "summary": "Update Member",
                "description": "Update member info",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string",
                        "description": "Member id"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "authorizations": {
                                        "type": "number",
                                        "nullable": true
                                    },
                                    "invitation": {
                                        "$ref": "#/components/schemas/invitationStatus",
                                        "nullable": true
                                    }
                                },
                                "example": {
                                    "authorizations": 111,
                                    "invitation": "ACCEPTED"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/member"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "400": {
                        "description": "Member ID is required"
                    },
                    "404": {
                        "description": "Member not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Members"
                ],
                "summary": "Delete Member",
                "description": "Disconnects a user from an institution",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string",
                        "description": "Member id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/member"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "400": {
                        "description": "Member ID is required"
                    },
                    "404": {
                        "description": "Member not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/institutions": {
            "post": {
                "tags": [
                    "Institutions"
                ],
                "summary": "Create institution",
                "description": "Creates a new institution owned by the user which created it",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "ownerId": {
                                        "type": "string",
                                        "format": "uuid"
                                    },
                                    "name": {
                                        "type": "string"
                                    }
                                },
                                "example": {
                                    "ownerId": "360e2c1f-a7ee-43c3-8dcd-1a0135f22470",
                                    "name": "Institution name"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/institution"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "400": {
                        "description": "Owner ID and institution name are required"
                    },
                    "404": {
                        "description": "Owner does not exists"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/institutions/{id}": {
            "get": {
                "tags": [
                    "Institutions"
                ],
                "summary": "Get institution",
                "description": "Get institution info",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string",
                        "description": "Institution id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/institutionExpanded"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "400": {
                        "description": "Institution ID is required"
                    },
                    "404": {
                        "description": "Institution not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "patch": {
                "tags": [
                    "Institutions"
                ],
                "summary": "Update institution",
                "description": "Update institution info",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string",
                        "description": "Institution id"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "nullable": true
                                    }
                                },
                                "example": {
                                    "name": "Institution name"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/institution"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "400": {
                        "description": "Institution ID is required"
                    },
                    "404": {
                        "description": "Institution not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Institutions"
                ],
                "summary": "Delete institution",
                "description": "Remove institution from system",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string",
                        "description": "Institution id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/institution"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "400": {
                        "description": "Institution ID is required"
                    },
                    "404": {
                        "description": "Institution not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/institutions/{id}/groups": {
            "post": {
                "tags": [
                    "Groups"
                ],
                "summary": "Create group",
                "description": "Create a group under an institution",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string",
                        "description": "Institution id"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "description": {
                                        "type": "string"
                                    }
                                },
                                "example": {
                                    "name": "Group name",
                                    "description": "Group description"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/group"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Institution does not exists"
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "string",
                                    "example": "Institution ID and group name are required\nGroup already exists within institution"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/groups/{id}": {
            "get": {
                "tags": [
                    "Groups"
                ],
                "summary": "Get group",
                "description": "Get group info",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string",
                        "description": "Group id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/groupExpanded"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "400": {
                        "description": "Group ID is required"
                    },
                    "404": {
                        "description": "Group not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "patch": {
                "tags": [
                    "Groups"
                ],
                "summary": "Update group",
                "description": "Update group info",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string",
                        "description": "Group id"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "description": {
                                        "type": "string",
                                        "nullable": true
                                    }
                                },
                                "example": {
                                    "name": "Group name",
                                    "description": "Group description"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/group"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "400": {
                        "description": "Group ID is required"
                    },
                    "404": {
                        "description": "Group not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Groups"
                ],
                "summary": "Delete group",
                "description": "Remove group from an institution",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string",
                        "description": "Group id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/group"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "400": {
                        "description": "Group ID is required"
                    },
                    "404": {
                        "description": "Group not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/groups/{id}/groupmembers": {
            "post": {
                "tags": [
                    "Group Members"
                ],
                "summary": "Create group member",
                "description": "Adds a member to a group",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string",
                        "description": "Group id"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "memberId": {
                                        "type": "string",
                                        "format": "uuid"
                                    },
                                    "authorizations": {
                                        "type": "number"
                                    }
                                },
                                "example": {
                                    "memberId": "89c3c4a1-a74e-42ce-8c48-a6fdd930cdcb",
                                    "authorizations": 111
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/groupMember"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "string",
                                    "example": "Group and Member IDs are required\nUser is already a group member"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "string",
                                    "example": "Member does not exist\nGroup does not exist"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/groupmembers/{id}": {
            "get": {
                "tags": [
                    "Group Members"
                ],
                "summary": "Get group member",
                "description": "Get group member info",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string",
                        "description": "Group member id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/groupMember"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "400": {
                        "description": "Group Member ID is required"
                    },
                    "404": {
                        "description": "Group Member not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "patch": {
                "tags": [
                    "Group Members"
                ],
                "summary": "Update group member",
                "description": "Update group member info",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string",
                        "description": "Group member id"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "authorizations": {
                                        "type": "number",
                                        "nullable": true
                                    }
                                },
                                "example": {
                                    "authorizations": 111
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/groupMember"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "400": {
                        "description": "Group Member ID is required"
                    },
                    "404": {
                        "description": "Group Member not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Group Members"
                ],
                "summary": "Delete group member",
                "description": "Removes a member from a group",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string",
                        "description": "Group member id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/groupMember"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "400": {
                        "description": "Group Member ID is required"
                    },
                    "404": {
                        "description": "Group Member not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/institutions/{id}/patients": {
            "post": {
                "tags": [
                    "Patients"
                ],
                "summary": "Create patient",
                "description": "Create a patient under an institution",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string",
                        "description": "Institution id"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "fullname": {
                                        "type": "string"
                                    },
                                    "birthdate": {
                                        "type": "string",
                                        "format": "date-time"
                                    },
                                    "height": {
                                        "type": "number"
                                    },
                                    "weight": {
                                        "type": "number"
                                    },
                                    "groupId": {
                                        "type": "string",
                                        "format": "uuid"
                                    }
                                },
                                "example": {
                                    "fullname": "Patient name",
                                    "birthdate": "2002-01-23 00:00:00.00",
                                    "height": 1.78,
                                    "weight": 66,
                                    "groupId": "6f3864e5-8640-437d-a02c-d6098a743433"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/patient"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "string",
                                    "example": "Institution ID and patient name are required\nInvalid height\nInvalid weight\nInvalid birthdate"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "string",
                                    "example": "Institution does not exist\nGroup does not exist or is not linked to the institution"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/patients/{id}": {
            "get": {
                "tags": [
                    "Patients"
                ],
                "summary": "Get patient",
                "description": "Get patient info",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string",
                        "description": "Patient id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/patientExpanded"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "400": {
                        "description": "Patient ID is required"
                    },
                    "404": {
                        "description": "Patient not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "patch": {
                "tags": [
                    "Patients"
                ],
                "summary": "Update patient",
                "description": "Update patient info. Institution ID is required if you are updating the patients group.",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string",
                        "description": "Patient id"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "fullname": {
                                        "type": "string"
                                    },
                                    "birthdate": {
                                        "type": "string",
                                        "format": "date-time"
                                    },
                                    "height": {
                                        "type": "number"
                                    },
                                    "weight": {
                                        "type": "number"
                                    },
                                    "groupId": {
                                        "type": "string",
                                        "format": "uuid"
                                    },
                                    "institutionId": {
                                        "type": "string",
                                        "format": "uuid"
                                    }
                                },
                                "example": {
                                    "fullname": "Patient name",
                                    "birthdate": "2002-01-23 00:00:00.00",
                                    "height": 1.78,
                                    "weight": 66,
                                    "groupId": "6f3864e5-8640-437d-a02c-d6098a743433",
                                    "institutionId": "87103691-a692-4603-ba5c-91ae16b5ffc0"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/patient"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "string",
                                    "example": "Patient ID is required\nThe institution ID is required if you want to change the patient's group"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "string",
                                    "example": "Institution does not exist\nGroup does not exist or is not linked to the institution\nPatient not found"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Patients"
                ],
                "summary": "Delete patient",
                "description": "Remove patient from an institution",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string",
                        "description": "Patient id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/patient"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "400": {
                        "description": "Patient ID is required"
                    },
                    "404": {
                        "description": "Patient not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/patients/{id}/summarizations": {
            "post": {
                "tags": [
                    "Summarizations"
                ],
                "summary": "Create summary",
                "description": "Adds a new recording summary to a patients record.\n\nThe Natural Language Processing task is run asynchronously, meaning that any errors occurring during processing will result in the summary entry being marked as FAILED.",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string",
                        "description": "Patient id"
                    }
                ],
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "file": {
                                        "type": "string",
                                        "format": "binary"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/summary"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "400": {
                        "description": "Patient ID is required"
                    },
                    "404": {
                        "description": "Patient does not exist"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/summarizations/{id}": {
            "get": {
                "tags": [
                    "Summarizations"
                ],
                "summary": "Get summary",
                "description": "Get summary info",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string",
                        "description": "Summary id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/summary"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "400": {
                        "description": "Summarization ID is required"
                    },
                    "404": {
                        "description": "Summarization not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "patch": {
                "tags": [
                    "Summarizations"
                ],
                "summary": "Update summary",
                "description": "Update summary info.",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string",
                        "description": "Summary id"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "title": {
                                        "type": "string"
                                    },
                                    "transcription": {
                                        "type": "string"
                                    },
                                    "audioPath": {
                                        "type": "string"
                                    },
                                    "insights": {
                                        "$ref": "#/components/schemas/summaryInsights"
                                    },
                                    "status": {
                                        "$ref": "#/components/schemas/summaryStatus"
                                    }
                                },
                                "example": {
                                    "title": "Summary #0013",
                                    "transcription": "Transcripted text...",
                                    "audioPath": "",
                                    "insights": {},
                                    "status": "FAILED"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/summary"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "400": {
                        "description": "Summarization ID is required"
                    },
                    "404": {
                        "description": "Summarization entry not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Summarizations"
                ],
                "summary": "Delete summary",
                "description": "Remove summary from a patients record",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string",
                        "description": "Summary id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/summary"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "400": {
                        "description": "Summarization ID is required"
                    },
                    "404": {
                        "description": "Summarization not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        }
    }
}